{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH } from '../constants/actionTypes';\nimport * as api from '../api';\n\n// Action creators\nexport const getPosts = page => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post); // Post api request to server to send a post\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","FETCH_BY_SEARCH","api","getPosts","page","dispatch","data","fetchPosts","type","payload","error","console","log","message","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","id","deletePost","likePost"],"sources":["/Users/aaliyah_merchant/Documents/Chat App/client/src/actions/posts.js"],"sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH } from '../constants/actionTypes';\nimport * as api from '../api';\n\n// Action creators\nexport const getPosts = (page) => async (dispatch) => {\n    try {\n        const { data } = await api.fetchPosts(page);\n        dispatch({ type: FETCH_ALL, payload: data });\n    } catch (error) {\n        console.log(error.message);\n    }\n};\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n        dispatch({ type: FETCH_BY_SEARCH, payload: data });\n        console.log(data);\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const { data }  = await api.createPost(post); // Post api request to server to send a post\n        dispatch({ type: CREATE, payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post);\n        dispatch({ type: UPDATE, payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n        dispatch ({ type: DELETE, payload: id });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.likePost(id);\n        dispatch({ type: LIKE, payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n};"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,eAAe,QAAQ,0BAA0B;AACnG,OAAO,KAAKC,GAAG,MAAM,QAAQ;;AAE7B;AACA,OAAO,MAAMC,QAAQ,GAAIC,IAAI,IAAK,MAAOC,QAAQ,IAAK;EAClD,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACK,UAAU,CAACH,IAAI,CAAC;IAC3CC,QAAQ,CAAC;MAAEG,IAAI,EAAEZ,SAAS;MAAEa,OAAO,EAAEH;IAAK,CAAC,CAAC;EAChD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAIC,WAAW,IAAK,MAAOV,QAAQ,IAAK;EACjE,IAAI;IACA,MAAM;MAAEC,IAAI,EAAE;QAAEA;MAAK;IAAE,CAAC,GAAG,MAAMJ,GAAG,CAACc,kBAAkB,CAACD,WAAW,CAAC;IACpEV,QAAQ,CAAC;MAAEG,IAAI,EAAEP,eAAe;MAAEQ,OAAO,EAAEH;IAAK,CAAC,CAAC;IAClDK,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMO,UAAU,GAAIC,IAAI,IAAK,MAAOb,QAAQ,IAAK;EACpD,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAI,MAAMJ,GAAG,CAACe,UAAU,CAACC,IAAI,CAAC,CAAC,CAAC;IAC9Cb,QAAQ,CAAC;MAAEG,IAAI,EAAEX,MAAM;MAAEY,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC7C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMS,UAAU,GAAGA,CAACC,EAAE,EAAEF,IAAI,KAAK,MAAOb,QAAQ,IAAK;EACxD,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACiB,UAAU,CAACC,EAAE,EAAEF,IAAI,CAAC;IAC/Cb,QAAQ,CAAC;MAAEG,IAAI,EAAEV,MAAM;MAAEW,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC7C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMW,UAAU,GAAID,EAAE,IAAK,MAAOf,QAAQ,IAAK;EAClD,IAAI;IACA,MAAMH,GAAG,CAACmB,UAAU,CAACD,EAAE,CAAC;IACxBf,QAAQ,CAAE;MAAEG,IAAI,EAAET,MAAM;MAAEU,OAAO,EAAEW;IAAG,CAAC,CAAC;EAC5C,CAAC,CAAC,OAAOV,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMY,QAAQ,GAAIF,EAAE,IAAK,MAAOf,QAAQ,IAAK;EAChD,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACoB,QAAQ,CAACF,EAAE,CAAC;IACvCf,QAAQ,CAAC;MAAEG,IAAI,EAAER,IAAI;MAAES,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC"},"metadata":{},"sourceType":"module"}